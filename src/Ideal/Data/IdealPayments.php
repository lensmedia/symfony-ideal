<?php

declare(strict_types=1);

namespace Lens\Bundle\IdealBundle\Ideal\Data;

use Lens\Bundle\IdealBundle\Ideal\Data\Type\FlowType;
use Lens\Bundle\IdealBundle\Ideal\Util;

class IdealPayments implements SerializableRequestData
{

    /**
     * Identifies whether the debtor token generated by Access Point should be used.
     *
     * Default: false
     */
    public ?bool $useDebtorToken = null;

    /**
     * The URL which will be used by the notification service post /debtorToken API to send the debtor token provided
     * by the iDEAL Hub. The URL should end with the version number of the notification service. This way the
     * Initiating Party can influence which version of the notification service is used to send the request. At the
     * moment only '/v3' is available. The DebtorTokenCallbackUrl can also be set in the Initiating Party service
     * subscription.
     *
     * @deprecated
     */
    public ?string $debtorTokenCallbackUrl = null;

    /**
     * Transaction flow which the Merchant/CPSP desires to initiate.
     *
     * Default: Standard
     */
    public ?FlowType $flowType = null;

    /**
     * By this the Merchant is requesting the checkout data from the iDEAL Hub with the finalization of the transaction.
     */
    public ?ExpectedCheckoutData $expectedCheckoutData = null;

    public function jsonSerialize(): array
    {
        return array_filter([
            'UseDebtorToken' => $this->useDebtorToken,
            'DebtorTokenCallbackUrl' => $this->debtorTokenCallbackUrl,
            'FlowType' => Util::enumToString($this->flowType),
            'ExpectedCheckoutData' => $this->expectedCheckoutData,
        ], Util::isNotNull(...));
    }
}
